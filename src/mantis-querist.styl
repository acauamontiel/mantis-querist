$mantis ?= {}
$mantis.querist = {
	overlap: false,
	unit: 'px',
	type: 'screen',
	breakpoints: {
		sm: 0,
		md: 640,
		lg: 960
	}
}
$from = {}
$to = {}
$at = {}
$between = {}

media($query)
	@media $query
		{block}

querist-init()
	$breakpoints = keys($mantis.querist.breakpoints)
	$length = length($breakpoints)

	for $bp, $i in $breakpoints
		$from[$bp] = from($bp)
		$to[$bp] = to($bp)
		$at[$bp] = at($bp)

		unless $i is ($length - 1)
			$between[$bp] = {}

			for $n in ($i + 1)..($length - 1)
				($between[$bp][$breakpoints[$n]] = between($bp, $breakpoints[$n]))

bp-index($bp)
	return key-index($mantis.querist.breakpoints, $bp)

join-media-query($mq = '', $type = false, $feature = false)
	if $type
		$mq = 'only ' + $type

	if $feature
		unless $mq is ''
			$mq += ' and '

		$mq += $feature

	return $mq

query(args..., $type = $mantis.querist.type)
	$fn-name = fn-name()
	$mq = join-media-query($type: $type)
	$breakpoints = $mantis.querist.breakpoints
	$unit = $mantis.querist.unit

	if $fn-name is 'to'
		$min = keys($breakpoints)[0]
		$max = args[0]
	else if $fn-name is 'from'
		$min = args[0]
		$max = keys($breakpoints)[length($breakpoints) - 1]
	else if $fn-name is 'at'
		$min = args[0]
		$max = keys($breakpoints)[bp-index($min)]
	else if $fn-name is 'between'
		$min = args[0]
		$max = args[1]

	unless bp-index($min) is 0
		$mq = join-media-query($mq, $feature: '(min-width: ' + $breakpoints[$min] + $unit + ')')

	$next = bp-index($max) + 1

	unless $next is length($breakpoints)
		$max = keys($breakpoints)[$next]
		$mq = join-media-query($mq, $feature: '(max-width: ' + $breakpoints[$max] + $unit + ')')

	return $mq

from = to = at = between = query
